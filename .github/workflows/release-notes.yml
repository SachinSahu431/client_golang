name: Read Changelog from PR Description

on:
  push:
    branches:
      - main

jobs:
  build-and-run-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code onto GOPATH
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          check-latest: true

      - name: Read Version from File
        id: read-version
        run: |
          git fetch --tags
          echo "Reading version from VERSION file..."
          VERSION=$(cat VERSION)
          # echo "::set-output name=version::$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      # Get the tag name based on the version
      - name: Get Tag Name
        id: get-tag
        run: |
          TAG_NAME="v${{ steps.read-version.outputs.VERSION }}"
          # echo "::set-output name=tag_name::$TAG_NAME"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Get Start SHA
        id: get-start-sha
        run: |
          TAG_NAME="${{ steps.get-tag.outputs.TAG_NAME }}"
          START_SHA=$(git rev-list -n 1 "$TAG_NAME")
          # echo "::set-output name=start_sha::$START_SHA"
          echo "START_SHA=$START_SHA" >> $GITHUB_OUTPUT
      
      - name: Get End SHA
        id: get-end-sha
        run: |
          END_SHA=$(git rev-parse main)
          echo "END_SHA=$END_SHA" >> $GITHUB_OUTPUT
          
      - name: Build and Install Release Notes Tool
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          temp_dir="$(mktemp -d)" && \
            git clone --depth=1 -q https://github.com/kubernetes/release.git "${temp_dir}" && \
            cd "${temp_dir}/"  && \
            go build ./cmd/release-notes/ && \
            mv release-notes /usr/local/bin/ && \
            release-notes --start-sha ${{ steps.get-start-sha.outputs.START_SHA }} --end-sha ${{ steps.get-end-sha.outputs.END_SHA }} --org SachinSahu431 --repo client_golang --branch main --required-author "" --debug --dependencies=false --markdown-links yes --go-template go-template:".github/changelog-template.tpl" --output=CHANGELOG_NEW.md
            cat CHANGELOG_NEW.md
           
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          title: "Automatic Changelog"
          body: "This PR contains changelog for commits made after release of version ${{ steps.read-version.outputs.VERSION }}."
          commit-message: "chore: autogenerated changelog"
          branch: "temp-changelog"
          signoff: true
          delete-branch: false
